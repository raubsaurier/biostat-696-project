max_adj_R2<-R2_cox/R2_max
binomial_results <-data.frame(Cox_Snell=R2_cox, Max_Adjusted=max_adj_R2)
l0=as.numeric(logLik(glm.fit0))
l1=as.numeric(logLik(binomial_model))
R2_cox<-1-(exp(l0-l1))^{2/sum(doctors_data$years)}
R2_max<-1-exp(l0)^{2/sum(doctors_data$years)}
max_adj_R2<-R2_cox/R2_max
binomial_results <-data.frame(Cox_Snell=R2_cox, Max_Adjusted=max_adj_R2)bin0<-glm(data=doctors_data, formula = deaths/years ~ 1, family = binomial, weights = years)
l0=as.numeric(logLik(glm.fit0))
l1=as.numeric(logLik(binomial_model))
R2_cox<-1-(exp(l0-l1))^{2/sum(doctors_data$years)}
R2_max<-1-exp(l0)^{2/sum(doctors_data$years)}
max_adj_R2<-R2_cox/R2_max
binomial_results <-data.frame(Cox_Snell=R2_cox, Max_Adjusted=max_adj_R2)
bin0<-glm(data=doctors_data, formula = deaths/years ~ 1, family = binomial, weights = years)
l0=as.numeric(logLik(glm.fit0))
l1=as.numeric(logLik(binomial_model))
R2_cox<-1-(exp(l0-l1))^{2/sum(doctors_data$years)}
R2_max<-1-exp(l0)^{2/sum(doctors_data$years)}
max_adj_R2<-R2_cox/R2_max
binomial_results <-data.frame(Cox_Snell=R2_cox, Max_Adjusted=max_adj_R2)
binomial_results
bin0<-glm(data=doctors_data, formula = deaths/years ~ 1, family = binomial, weights = years)
l0=as.numeric(logLik(bin0)
l1=as.numeric(logLik(binomial_model))
R2_cox<-1-(exp(l0-l1))^{2/sum(doctors_data$years)}
R2_max<-1-exp(l0)^{2/sum(doctors_data$years)}
max_adj_R2<-R2_cox/R2_max
binomial_results <-data.frame(Cox_Snell=R2_cox, Max_Adjusted=max_adj_R2)
kable(binomial_results)
### poisson model:
poisson_results
poi.fit0<-glm(data=doctors_data, formula = deaths ~ 1 +offset(log(years)), family = "poisson")
l0=as.numeric(logLik(poi.fit0))
l1=as.numeric(logLik(poisson_model))
R2_cox<-1-(exp(l0-l1))^{2/sum(doctors_data$years)}
R2_max<-1-exp(l0)^{2/sum(doctors_data$years)}
max_adj_R2<-R2_cox/R2_max
poisson_results <-data.frame(Cox_Snell=R2_cox, Max_Adjusted=max_adj_R2)
summary(poisson_model)
confint(poisson_model)
exp(0.7364876)
exp(2.1984920)
0.37220*exp(1.44097)*1.96
1.44097-3.082036
exp(1.44097)
4.224792-3.082036
3.082036+ 4.224792
exp(0.7364876)
exp( 2.1984920)
exp(1.44097) + 0.37220*exp(1.44097)*1.96
0.20795*exp(2.37648)*1.96
exp(2.37648)+4.388409
summary(bernoulli_model)
-2.357e+01
622*582/(48*5748)
265*517/(36*4489)
269*1259/(257*1324)
401*6330/(670*5006)
36*257/(12*365)
1.31*0.1
1.31-0.131
365*517/(36*4489)
5006*269/(1324*401)
(900*6000)/(600*4000)
(720*6180)/(3820*780)
720*6800/(780*3200)
42*25/(25*8)
## load libraries
rm(list=ls())
library(data.table)
library(readxl)
library(RColorBrewer)
library(classInt)
library(geoR)
library(spBayes)
library(fields)
library(MBA)
library(akima)
library(ggplot2)
library(usmap)
library(colorRamps)
library(gstat)
library(CARBayes)
library(maptools)
library(spdep)
library(dplyr)
library(coda)
setwd("~/repos/biostat-696-project")
## Read in the data
asthma = data.table(read.csv("2016Asthma_Final_w_KrigingParams_PM25.csv"))
asthma$fips = as.numeric(fips(asthma$state))
asthma[which(asthma$state == "New Hampshire"), "asthma_count"] = 28477
asthma[which(asthma$state == "Iowa"), "asthma_count"] = 62517
## NOTE: MUST CHANGE POPULATION COUNTS TO REFLECT CHANGE IN YEAR
states_subset = c("Maine", "New Hampshire", "Vermont", "New York",
"Massachusetts", "Connecticut", "Rhode Island",
"New Jersey", "Pennsylvania", "Ohio", "Wisconsin",
"Indiana", "Kentucky", "Michigan", "Illinois",
"Missouri", "Iowa", "Minnesota", "Nebraska",
"Kansas", "Oklahoma")
asthma_sub = asthma %>%
filter(state %in% states_subset)
plot_usmap(data = asthma_sub[,1:3], values = "asthma_count", lines = "black", labels = TRUE) +
scale_fill_gradientn(colours=blue2red(8), name="Asthma Count") +
theme(legend.position = "right") +
labs(title="2016 Asthma Counts")
US = map("state",fill=TRUE,plot=FALSE)
US.poly = map2SpatialPolygons(US,IDs=sapply(strsplit(US$names,":"),function(x) x[1]),
proj4string=CRS("+proj=longlat + datum=wgs84"))
US.poly = US.poly[which(names(US.poly) %in% tolower(states_subset))]
US.nb = poly2nb(US.poly)
US.weights = nb2WB(US.nb)
US.list.w = nb2listw(US.nb)
# test Moran's I
moran.test(asthma_sub$asthma_count / asthma_sub$total_population,
listw = US.list.w, randomisation=FALSE)
health_model = glm(asthma_count ~ offset(log(total_population)) + obesity_rate_2016 + pct_daily_smokers,
family = poisson,
data = asthma_sub)
summary(health_model)
health_model = glm(asthma_count ~ offset(log(total_population)) + obesity_rate_2016 + pct_daily_smokers,
family = "poisson",
data = asthma_sub)
?glm
summary(health_model)
install.packages(c("devtools", "git2r"))
environ_model = glm(asthma_count ~ offset(log(total_population)) + meanAQI.Ozone + meanAQI.Other + meanAQI.PM2.5 + pct_daily_smokers,
family = poisson,
data = asthma_sub)
summary(environ_model)
environ_model = glm(asthma_count ~ offset(log(total_population)) + meanAQI.Ozone + meanAQI.Other + meanAQI.PM2.5 + pct_daily_smokers,
family = "poisson",
data = asthma_sub)
summary(environ_model)
7.262e-03
3.745e-0
3.745e-03
-1.396e-03
-1.765e-02
moran.test(residuals(environ_model),
listw = US.list.w, randomisation = FALSE)
et.seed(696)
# get weights
adj.US = US.weights$adj
rep.US = rep(1:nrow(asthma_sub),US.weights$num)
W = matrix(0, nrow(asthma_sub), nrow(asthma_sub))
for (i in 1:nrow(asthma_sub)) {
W[i, adj.US[rep.US == i]] = rep(1, US.weights$num[i])
}
asthma_count = round(asthma_sub$asthma_count / 1000)
total_population = round(asthma_sub$total_population / 1000)
# run bayesian disease mapping model
health_dismap = S.CARleroux(formula = asthma_count ~
offset(log(total_population)) +
asthma_sub$obesity_rate_2016 + asthma_sub$pct_daily_smokers,
W=W,
family = "poisson",
rho = 1,
burnin = 500,
n.sample = 200000,
thin = 1,
prior.mean.beta = NULL,
prior.var.beta = NULL,
prior.nu2 = NULL,
prior.tau2 = NULL,
verbose = TRUE)
health_dismap$model
health_dismap$summary.results
numBetas <- c(1,"obesity_rate_2016", "pct_daily_smokers") #intercept + covariates
plot <- list()
for(i in (1:length(numBetas))){
plot[[i]] <- traceplot(health_dismap$samples$beta[,i], paste0(main="Trace of ", 1))
}
i
traceplot(health_dismap$samples$beta[,i], paste0(main="Trace of ", 1))
traceplot(health_dismap$samples$beta[,i], main=paste0("Trace of ", 1))
plot <- list()
for(i in (1:length(numBetas))){
plot[[i]] <- traceplot(health_dismap$samples$beta[,i], paste0(main="Trace of ", i))
}
i <- 2
plot[[i]] <- traceplot(health_dismap$samples$beta[,i], paste0(main="Trace of ", numBetas[i]))
traceplot(health_dismap$samples$beta[,3], paste0(main="Trace of ", numBetas[3]))
test <- health_dismap$samples$beta
View(test)
library(baker)
print("psiBS")
print_res("psiBS")
print_res()
colnames(test)
colnames(test) <- c("intercept", "obesity", "smoking")
View(test)
traceplot(test[,i], paste0(main="Trace of ",colnames(test)[i]))
for(i in colnames(test)){
print(i)
}
plot_list <- list()
for(i in colnames(test)){
plot_list[i] <- traceplot(test[,i], paste0(main="Trace of ",colnames(test)[i]))
}
for(i in colnames(test)){
print(traceplot(test[,i], paste0(main="Trace of ",colnames(test)[i])))
}
print(traceplot(test[,i], paste0(main="Trace of ",colnames(test)[i])))
traceplot(test[,i])
for(i in colnames(test)){
print(traceplot(test[,i], main=paste0("Trace of ",colnames(test)[i])))
}
plot_list <- list()
for(i in colnames(test)){
plot_list[[i]] <- traceplot(test[,i], main=paste0("Trace of ",colnames(test)[i])))
}
colnames(test)[i]
for(i in colnames(test)){
plot_list[[i]] <- traceplot(test[,i], main=paste0("Trace of ",numBetas[i]))
}
traceplot(test[,i], main=paste0("Trace of ",numBetas[i]))
numBetas <- c("intercept","obesity_rate_2016", "pct_daily_smokers") #intercept + covariates
for(i in 1:length(numBetas)){
plot_list[[i]] <- traceplot(test[,i], main=paste0("Trace of ",numBetas[i]))
}
for(i in 1:length(numBetas)){
plot_list[[i]] <- traceplot(test[,i], main=paste0("Trace of ",numBetas[i]))
}
traceplot(test[,i], main=paste0("Trace of ",numBetas[i]))
plot_list <- list()
for(i in 1:length(numBetas)){
plot_list[[i]] <- traceplot(test[,i], main=paste0("Trace of ",numBetas[i]))
}
traceplot(test[,1], main=paste0("Trace of ",numBetas[1]))
traceplot(test[,2], main=paste0("Trace of ",numBetas[2]))
for(i in 1:length(numBetas)){
print(traceplot(test[,i], main=paste0("Trace of ",numBetas[i])))
}
for(i in 1:length(numBetas)){
traceplot(test[,i], main=paste0("Trace of ",numBetas[i]))
}
health_dismap$summary.results
traceplot(health_dismap$samples$tau2)
traceplot(health_dismap$samples$phi)
98*300/(700*60)
4,(2/140)/(36/60)
(42/140)/(36/60)
(56/560)/(24/240)
28/(26*3)
35*20/(95*10)
0.7/(26/30)
35/10
35/130
0.2692308/(1/3)
(36+21)*(54+23)/((27+24)*(18+5))
(54+27)*(5+21)/((23+24)*(18+36))
(54+18)*(24+21)/((23+5)*(27+36))
54*36/(18*27)
23*21/(5*24)
3.74+0.374
200/110
30*234/(33*240)
170*156/(77*60)
30/270/(33/267)
170/230/(77/233)
sum(140,30,210,120)
sum(30,35,120,315)
170/65
sum(140,210)
140*150/(30*350)
30*350/(35*150)
30/35
350*350/(150*150)
??qnn.test
install.packages("smacpod")
library(smacpod)
?qnn.test
?quadrat.test
library(MASS)
library(maptools)
library(splancs)
library(rgdal)
library(spatialkernel)
library(sp)
library(spatstat)
library(spdep)
library(fields)
library(SpatialEpi)
library(smacpod)
data(grave)
View(grave)
library(geoR)
library(data.table)
library(spdep)
library(splancs)
library(spatstat)
library(spatialkernel)
library(plotrix)
setwd("~/Fall 2018/tmp")
cancer_data <- data.table(read.csv("~/Library/Mobile Documents/com~apple~CloudDocs/School/Year 1 Classes/Biostat 696/HW/HW4/Cancer_data.txt",  sep=""))
View(cancer_data)
?ppp
## first, we need to make a spatial point process out of the cancer dataset so we have cases + controls
win <- owin(c(min(cancer_data$x),max(cancer_data$x)),c(min(cancer_data$y),max(cancer_data$y)))
cancerPP <- ppp(cancer_data$x, cancer_data$y,window=win, marks=cancer_data$cancer.type)
qnn.test(cancerPP,q=c(3,5,7,9,11,13,15))
qnn.test(cancerPP,q=c(3,5,7,9))
qnn.test(cancerPP,q=c(3,5,7,9,11,13,15,17, 19, 21))
qnn.test(cancerPP,q=c(3,5,7,9,11,13,15))
ce_test <- qnn.test(cancerPP,q=c(3,5,7,9,11,13,15))
ce_test$qsum
ce_test <- qnn.test(cancerPP,q=c(3,5,7,9,11,13,15,17,19))
ce_test$qsum
ce_test$qsum
ce_test$consum
? logrr.test
View(cancerPP)
View(cancer_data)
ce_test <- qnn.test(cancerPP,q=c(11,13,15,17,19,21))
ce_test$qsum
ce_test$consum
ce_test <- qnn.test(cancerPP,q=c(2,3,4,5,6))
ce_test$qsum
ce_test$consum
ce_test <- qnn.test(cancerPP,q=c(6,7,8,9,10,11))
ce_test$qsum
ce_test$consum
ce_test <- qnn.test(cancerPP,q=c(6,7,8,9,10,11,12,13,15,19))
ce_test$qsum
ce_test$consum
ce_test <- qnn.test(cancerPP,q=c(23,25))
ce_test$qsum
ce_test$consum
ce_test <- qnn.test(cancerPP,q=c(23,25,27,29))
ce_test$qsum
ce_test$consum
ggplot(data=cancer_data, aex(x=x, y=y, colour=cancer.type)) + geom_point()
ggplot(data=cancer_data, aes(x=x, y=y, colour=cancer.type)) + geom_point()
larynxData <- cancer_data[cancer.type=="larynx"]
## Here we plot the points
plot(larynxData$x, larynxData$y,main="Larynx cancer cases", xlab="X",ylab="Y",pch=20)
ce_test <- qnn.test(cancerPP,q=c(35,37,39,41))
ce_test$qsum
ce_test$consum
ce_test <- qnn.test(cancerPP,q=c(35,37,39,41,43,50,62))
ce_test$qsum
ce_test$consum
ce_test <- qnn.test(cancerPP,q=c(3,5,7,9,11,13,15,17))
ce_test$qsum
ce_test$consum
ce_test2 <- qnn.test(cancerPP,q=c(41,43,47,51))
ce_test$qsum
ce_test2 <- qnn.test(cancerPP,q=c(55,57,59,61))
ce_test$qsum
ce_test2 <- qnn.test(cancerPP,q=c(55,57,59,61))
ce_test2$qsum
ce_test2 <- qnn.test(cancerPP,q=c(55,57,59,61,63,65,67,69))
ce_test2$qsum
ce_test2 <- qnn.test(cancerPP,q=c(67,69,71,73,75))
ce_test2$qsum
ce_test2 <- qnn.test(cancerPP,q=c(81,83,85,88))
ce_test2$qsum
ce_test2 <- qnn.test(cancerPP,q=c(81,83,85))
ce_test2$qsum
ce_test2 <- qnn.test(cancerPP,q=c(81,83,85,87,91,93))
ce_test2$qsum
ce_test2 <- qnn.test(cancerPP,q=c(81,83,85,87,91,93, 97, 100))
ce_test2$qsum
ce_test2 <- qnn.test(cancerPP,q=c(81,83,85,87,91,93, 97, 100, 120))
ce_test2$qsum
ce_test2 <- qnn.test(cancerPP,q=c(31,33,35,37,39))
ce_test2$qsum
?logrr.test
logrr_cancer <- logrr(cancerPP)
logrr.test(logrr_cancer)
cancerPP <- ppp(cancer_data$x, cancer_data$y,window=window, marks=cancer_data$cancer.type)
larynx.poly <- as.points(c(min(polygon_data$x),max(polygon_data$x),max(polygon_data$x),min(polygon_data$x)),
c(max(polygon_data$y),max(polygon_data$y),min(polygon_data$y),min(polygon_data$y)))
plot(larynx.poly , type="l")
larynx_point <- matrix(NA, nrow=length(larynxData$x),ncol=2)
larynx_point[,1] <- larynxData$x
larynx_point[,2] <- larynxData$y
##### window for the point process
window <- owin(c(min(polygon_data$x),max(polygon_data$x)),c(min(polygon_data$y),max(polygon_data$y)))
larynxPP <- ppp(larynxData$x, larynxData$y,window=window)
## L function
L.larynx <- Lest(larynxPP)
plot(L.larynx, main="L function of Larynx Cancer Cases")
## envelope of the L function
larynxL <- envelope(larynxPP,fun=Lest,rank=1,nsim=99)
plot(larynxL,main="L function \n of the Larynx PP (w/ simulation envelope)")
polygon_data <- data.table(read.csv("~/Library/Mobile Documents/com~apple~CloudDocs/School/Year 1 Classes/Biostat 696/HW/HW4/Polygon_cancer_data.txt",  sep=""))
larynx.poly <- as.points(c(min(polygon_data$x),max(polygon_data$x),max(polygon_data$x),min(polygon_data$x)),
c(max(polygon_data$y),max(polygon_data$y),min(polygon_data$y),min(polygon_data$y)))
plot(larynx.poly , type="l")
larynx_point <- matrix(NA, nrow=length(larynxData$x),ncol=2)
larynx_point[,1] <- larynxData$x
larynx_point[,2] <- larynxData$y
##### window for the point process
window <- owin(c(min(polygon_data$x),max(polygon_data$x)),c(min(polygon_data$y),max(polygon_data$y)))
larynxPP <- ppp(larynxData$x, larynxData$y,window=window)
## L function
L.larynx <- Lest(larynxPP)
plot(L.larynx, main="L function of Larynx Cancer Cases")
## envelope of the L function
larynxL <- envelope(larynxPP,fun=Lest,rank=1,nsim=99)
plot(larynxL,main="L function \n of the Larynx PP (w/ simulation envelope)")
cancerPP <- ppp(cancer_data$x, cancer_data$y,window=window, marks=cancer_data$cancer.type)
ce_test <- qnn.test(cancerPP,q=c(3,5,7,9,11,13,15,17))
## first, we need to make a spatial point process out of the cancer dataset so we have cases + controls
win <- owin(c(min(cancer_data$x),max(cancer_data$x)),c(min(cancer_data$y),max(cancer_data$y)))
cancerPP <- ppp(cancer_data$x, cancer_data$y,window=win, marks=cancer_data$cancer.type)
ce_test <- qnn.test(cancerPP,q=c(3,5,7,9,11,13,15,17))
ce_test$qsum
ggplot(data=cancer_data, aes(x=x, y=y, colour=cancer.type)) + geom_point()
rm(list=ls())
library(data.table)
library(knitr)
library(dobson)
library(ResourceSelection)
data("doctors")           # lazy load "faithful"
delayedAssign("doctors_data", doctors)  # lazy assign "x" with a reference to "faithful"
rm(doctors)                  # remove "faithful"
summary(doctors_data)
setnames(doctors_data, "person-years", "years")
##add some indicator variables:
doctors_data$smoke_ind <- ifelse(doctors_data$smoking=="smoker",1,0)
doctors_data$age_cat <- seq(1:5)
doctors_data$age_sqr <- doctors_data$age_cat^2
doctors_data$smoke_age <-doctors_data$age_cat*doctors_data$smoke_ind
binomial_model=glm(deaths/years ~ smoke_ind + age_cat + age_sqr + smoke_age,data=doctors_data, family="binomial", weights = years)
summary(binomial_model)
poisson_model=glm(deaths ~ smoke_ind + age_cat + age_sqr + smoke_age + offset(log(years)), family="poisson", data=doctors_data)
summary(poisson_model)
poisson_model$deviance
kable(poisson_model$deviance)
1-pchisq((939.70 -  1.641 ), df=(9-5))
1-pchisq((939.70 -  1.641 ), df=(9-5))
1-pchisq((935.0673 -  1.6354), df=(9-5))
## calculate non-deaths
doctors_data$non_deaths <- doctors_data$years-doctors_data$deaths
bern_data <- doctors_data[,c("deaths", "smoke_ind", "years", "non_deaths")]
smoke <- c(rep(1, 142247), rep(0,39220))
age_cat <- c(rep(1, 52407), rep(2, 43248), rep(3,28612),rep(4,12663), rep(5,5317),
rep(1, 18790), rep(2,10673), rep(3, 5710), rep(4, 2585), rep(5, 1462))
deaths <- c(rep(1,32), rep(1, 104), rep(1,206), rep(1, 186), rep(1,102),
rep(1, 2), rep(1,12), rep(1, 28), rep(1,28), rep(1,31))
non_deaths <- c(rep(0, 52375), rep(0,43144), rep(0, 28406), rep(0, 12477),rep(0, 5215),
rep(0,18788), rep(0, 10661), rep(0,5682), rep(0,2557), rep(0,1431))
death_ind <- c(deaths, non_deaths)
bern_data <- data.table(cbind(death_ind, smoke, age_cat))
bernoulli_model=glm(death_ind ~  smoke + age_cat + age_cat^2 + age_cat*smoke,data=bern_data, family="binomial")
summary(bernoulli_model)
summary(poisson_model)
kable(bern_model$deviance)
kable(bernoulli_model$deviance)
1-pchisq((9521.1-   7698.0), df=(9-5))
pchisq((9521.1-7698.0), df=(9-5))
pchisq(20), df=(4))
pchisq((20), df=(4))
pchisq((40), df=(4))
pchisq((2), df=(4))
bernoulli_model=glm(death_ind/sum(death_ind) ~  smoke + age_cat + age_cat^2 + age_cat*smoke,data=bern_data, family="binomial")
summary(bernoulli_model)
glm(cbind(death_ind, 1-death_ind)~  smoke + age_cat + age_cat^2 + age_cat*smoke,data=bern_data, family="binomial")
bern.fit0<-glm(data=bern_data, formula = deaths ~ 1 ), family = "binomial")
l0=as.numeric(logLik(bern.fit0))
l1=as.numeric(logLik(bernoulli_model))
bern_R2_cox<-1-(exp(l0-l1))^{2/sum(bern_data$deaths)}
bern_R2_max<-1-exp(l0)^{2/sum(bern_data$deaths)}
bern_max_adj_R2<-bern_R2_cox/bern_R2_max
bern_results <-data.frame(Cox_Snell=bern_R2_cox, Max_Adjusted=bern_max_adj_R2)
kable(bern_results)
bern.fit0<-glm(data=bern_data, formula = deaths ~ 1, family = "binomial")
l0=as.numeric(logLik(bern.fit0))
l1=as.numeric(logLik(bernoulli_model))
bern_R2_cox<-1-(exp(l0-l1))^{2/sum(bern_data$deaths)}
bern_R2_max<-1-exp(l0)^{2/sum(bern_data$deaths)}
bern_max_adj_R2<-bern_R2_cox/bern_R2_max
bern_results <-data.frame(Cox_Snell=bern_R2_cox, Max_Adjusted=bern_max_adj_R2)
kable(bern_results)
summary(bern.fit0)
bern_R2_cox<-1-(exp(bern_l0-bern_l1))^{2/sum(doctors_data$years)}
bern_R2_max<-1-exp(l0)^{2/sum(doctors_data$years)}
bern_l0=as.numeric(logLik(bern.fit0))
bern_l1=as.numeric(logLik(bernoulli_model))
bern_R2_cox<-1-(exp(bern_l0-bern_l1))^{2/sum(doctors_data$years)}
bern_R2_max<-1-exp(l0)^{2/sum(doctors_data$years)}
bern_max_adj_R2<-bern_R2_cox/bern_R2_max
bern_results <-data.frame(Cox_Snell=bern_R2_cox, Max_Adjusted=bern_max_adj_R2)
bern_results <-data.frame(Cox_Snell=bern_R2_cox, Max_Adjusted=bern_max_adj_R2)
kable(bern_results)
sum(nrow(bern_data[death_ind!=1]))
bern.fit0<-glm(data=bern_data, formula = deaths ~ 1, family = "binomial")
bern_l0=as.numeric(logLik(bern.fit0))
bern_l1=as.numeric(logLik(bernoulli_model))
bern_R2_cox<-1-(exp(bern_l0-bern_l1))^{2/ssum(nrow(bern_data[death_ind!=1]))}
bern_R2_max<-1-exp(l0)^{2/sum(nrow(bern_data[death_ind!=1]))}
bern_max_adj_R2<-bern_R2_cox/bern_R2_max
bern_results <-data.frame(Cox_Snell=bern_R2_cox, Max_Adjusted=bern_max_adj_R2)
kable(bern_results)
bern.fit0<-glm(data=bern_data, formula = deaths/sum(nrow(bern_data)) ~ 1, family = "binomial")
View(bern.fit0)
summary(bern.fit0)
bern.fit0<-glm(data=bern_data, formula = death_ind/sum(nrow(bern_data)) ~ 1, family = "binomial")
summary(bern.fit0)
bernoulli_model=glm(death_ind/sum(nrow(bern_data))~  smoke + age_cat + age_cat^2 + age_cat*smoke,data=bern_data, family="binomial")
summary(bernoulli_model)
View(doctors_data)
bern_data$years <- 1
bernoulli_model=glm(death_ind/years)~  smoke + age_cat + age_cat^2 + age_cat*smoke,data=bern_data, family="binomial")
summary(bernoulli_model)
bernoulli_model=glm(death_ind/years~  smoke + age_cat + age_cat^2 + age_cat*smoke,data=bern_data, family="binomial")
summary(bernoulli_model)
View(bern_data)
